## Task 7: Grid System and Breakpoints

**CSS Grid System**

A CSS grid system provides a structured layout for organizing elements on a web page. It allows you to create complex layouts with rows and columns, making it easier to design responsive interfaces.

**Implementation:**

You can implement a grid system using pure CSS or a framework like Bootstrap. Here's an example using pure CSS:

```css
.container {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-gap: 20px;
}

.item {
    background-color: lightblue;
    padding: 20px;
    text-align: center;
}
```

In this example, the `.container` element is set as a grid container with three columns of equal width. The `.item` elements are placed within the grid.

**Responsive Design with Breakpoints**

To make the layout responsive, you can use media queries to adjust the grid system based on the screen size.

```css
.container {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-gap: 20px;
}

@media (max-width: 768px) {
    .container {
        grid-template-columns: 1fr;
    }
}
```

In this example, the grid is set to have three columns on larger screens. However, when the screen width is less than 768px, the grid is adjusted to have a single column.

**Breakpoints**

Breakpoints are specific screen sizes at which the layout changes. Common breakpoints include:

- **Mobile:** 480px
- **Tablet:** 768px
- **Desktop:** 1024px
- **Large Desktop:** 1200px

By using media queries and breakpoints, you can create responsive layouts that adapt to different screen sizes and devices.
