### Applying Colors and Backgrounds in CSS

In CSS, colors and backgrounds are essential for defining the visual appearance of web elements. You can apply colors using various formats, including hexadecimal (hex), RGB (Red, Green, Blue), and HSL (Hue, Saturation, Lightness). Backgrounds can be set using solid colors, gradients, or images.

### Color Formats

1. **Hexadecimal (Hex)**: A six-digit code starting with a `#` symbol that represents colors.
   - Example: `#FF5733` (a shade of orange).

2. **RGB**: Defines colors using the red, green, and blue components.
   - Example: `rgb(255, 87, 51)` (the same shade of orange as above).

3. **HSL**: Represents colors through hue, saturation, and lightness.
   - Example: `hsl(12, 100%, 60%)` (the same shade of orange).

### Background Properties

1. **Solid Color**: A uniform color applied to an element.
2. **Gradient**: A smooth transition between two or more colors.
3. **Image**: A background image that can be set to cover, contain, or repeat.

### Example: Color and Background Demonstration

Below is an HTML document that demonstrates various ways to set colors and backgrounds using CSS.

```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Color and Background Example</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            padding: 20px;
        }

        .solid-color {
            background-color: #FF5733; /* Solid color using Hex */
            color: white;
            padding: 20px;
            margin-bottom: 20px;
        }

        .rgb-color {
            background-color: rgb(51, 102, 255); /* Solid color using RGB */
            color: white;
            padding: 20px;
            margin-bottom: 20px;
        }

        .hsl-color {
            background-color: hsl(210, 100%, 50%); /* Solid color using HSL */
            color: white;
            padding: 20px;
            margin-bottom: 20px;
        }

        .gradient {
            background: linear-gradient(to right, #FF5733, #FFC300); /* Gradient background */
            color: white;
            padding: 20px;
            margin-bottom: 20px;
        }

        .image-background {
            background-image: url('https://via.placeholder.com/400'); /* Image background */
            background-size: cover; /* Cover the entire element */
            color: white;
            padding: 20px;
            margin-bottom: 20px;
        }

        .multiple-backgrounds {
            background: 
                url('https://via.placeholder.com/400') no-repeat center, /* Image background */
                linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)); /* Gradient overlay */
            color: white;
            padding: 20px;
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <h1>Color and Background Demonstration</h1>
    
    <div class="solid-color">
        <h2>Solid Color (Hex)</h2>
        <p>This section has a solid background color applied using a hex code.</p>
    </div>

    <div class="rgb-color">
        <h2>Solid Color (RGB)</h2>
        <p>This section has a solid background color applied using RGB values.</p>
    </div>

    <div class="hsl-color">
        <h2>Solid Color (HSL)</h2>
        <p>This section has a solid background color applied using HSL values.</p>
    </div>

    <div class="gradient">
        <h2>Gradient Background</h2>
        <p>This section has a gradient background that transitions from orange to yellow.</p>
    </div>

    <div class="image-background">
        <h2>Image Background</h2>
        <p>This section has a background image applied that covers the entire area.</p>
    </div>

    <div class="multiple-backgrounds">
        <h2>Multiple Backgrounds</h2>
        <p>This section combines an image background with a gradient overlay for added effect.</p>
    </div>
</body>
</html>
```

### Explanation of the Code

1. **HTML Structure**:
   - The document contains a title and several `<div>` elements, each demonstrating different color and background properties.

2. **CSS Styles**:
   - **Solid Color Sections**: Each `.solid-color`, `.rgb-color`, and `.hsl-color` class applies a solid background using different color formats.
   - **Gradient Background**: The `.gradient` class applies a linear gradient that transitions from one color to another.
   - **Image Background**: The `.image-background` class uses a background image and sets it to cover the entire div.
   - **Multiple Backgrounds**: The `.multiple-backgrounds` class combines an image and a gradient overlay, showcasing how multiple backgrounds can be layered.

### Conclusion

Understanding how to apply colors and backgrounds in CSS allows developers to create visually appealing web pages. Using various color formats like hex, RGB, and HSL gives flexibility in design, while different background properties enable creative layouts. The above example illustrates how these techniques can be effectively used to enhance the user interface of a website.