## Inline, Internal, and External CSS

**Inline CSS**

* **Definition:** Styles are applied directly to HTML elements using the `style` attribute.
* **Example:** `<h1 style="color: red;">Inline Style</h1>`
* **Advantages:** Quick and easy to implement.
* **Disadvantages:** Makes HTML code less readable and maintainable, difficult to manage styles for multiple elements.

**Internal CSS**

* **Definition:** Styles are defined within the `<head>` section of the HTML document.
* **Example:** `<style> p { color: green; } </style>`
* **Advantages:** Good for small projects, keeps styles close to the HTML.
* **Disadvantages:** Can clutter the HTML code.

**External CSS**

* **Definition:** Styles are defined in a separate `.css` file and linked to the HTML document using the `<link>` tag.
* **Example:** `<link rel="stylesheet" href="styles.css">`
* **Advantages:** Improves code organization, readability, and reusability.
* **Disadvantages:** Requires additional setup and linking.

**HTML Page Demonstrating All Three Methods:**

```html
<!DOCTYPE html>
<html>
<head>
    <title>CSS Styles</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <h1 style="color: red;">Inline Style</h1>
    <p>Internal Style</p>
    <div class="external">External Style</div>
</body>
</html>

<style>
    /* Internal Style */
    p {
        color: green;
    }
</style>
```

```css
/* styles.css (External Style) */
.external {
    color: blue;
}
```

**Explanation:**

- The `h1` element uses inline CSS to set its color to red.
- The `<p>` element uses internal CSS to set its color to green.
- The `.external` element uses external CSS (defined in the `styles.css` file) to set its color to blue.

**Choosing the Right Method:**

- **Inline CSS:** Suitable for one-off or temporary styles.
- **Internal CSS:** Good for small projects or when creating a prototype.
- **External CSS:** Best for large projects, multi-page websites, and when you want optimal maintainability.
